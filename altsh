#!/bin/bash
Red='\033[0;31m'
Yellow='\033[0;33m'
Green='\033[0;32m'
Rst='\033[0m'
Cm='\xE2\x9C\x94'
Cross='âœ˜'

function print_help()
{
    printf "Usage: `echo $0 | rev | awk -F '/' '{print $1}' | rev` -l [file with subdomains] | anew domain-alive.subs\n"
    printf "Flags:\n"
    printf "\t-h Help Menu\n"
    printf "\t-l takes a list of subdomains\t(required)\n"
}


while getopts 'hbl:o:w:' opt; do
    case $opt in
        h) print_help; exit ;;
        l) SUBS=$OPTARG ;;
        b) BRUTE_LARGE=false ;;
        ?) print_help; exit 1 ;;
        *) print_help; exit 1 ;;
    esac
done

shift $(( OPTIND - 1 ))
if [ -z "$SUBS" ]; then
    # If the file path was not provided as a flag, read it from stdin
    print_help >&2
    exit 1
fi

if [ ! -f $SUBS ]; then
    printf "$SUBS could not be found, does file exist?\n" >&2
    exit 1
fi

# Grab domain name 
DOMAIN=$(awk 'NR==1 {print; exit}' $SUBS | awk -F. '{print $(NF-1)}')

RESOLVERS_PATH="/tmp/resolvers.txt"
BRUTE_WORDLIST="~/Hacking/wordlists/assetnotes/best-dns-wordlist.txt"
OUTPUT_KEYWORDS="subs.keywords"

# Grab latest public dns servers
curl -s 'https://public-dns.info/nameservers.txt' > $RESOLVERS_PATH
{
# Brute force subdomains
# if ! $BRUTE_LARGE; then
#     printf "${Yellow}[i] bruteforcing with large list: $BRUTE_WORDLIST${Rst}\n" >&2
#     puredns bruteforce $BRUTE_WORDLIST -q -r $RESOLVERS_PATH $DOMAIN
# else
#     printf "${Yellow}[i] Skipping bruteforcing with large list: $BRUTE_WORDLIST${Rst}\n" >&2
# fi

# Grab keywords from a list of subdomains
cat $SUBS | skeywords | sort -u | anew $OUTPUT_KEYWORDS &> /dev/null

# Resolve subdomains generated from keywords
printf "${Yellow}[i] Resolving alertations generated from keywords - $OUTPUT_KEYWORDS${Rst}\n" >&2
gotator -sub $SUBS -perm $OUTPUT_KEYWORDS -silent -depth 1 -adv | puredns resolve -q -r $RESOLVERS_PATH

# Generate non target specific alteration and resolve 
printf "${Yellow}[i] Resolve alterations from alterx${Rst}\n" >&2
cat $SUBS | alterx -enrich -silent | puredns resolve -q -r $RESOLVERS_PATH

printf "${Yellow}[i] Resolve alterations from dngen${Rst}\n" >&2
cat $SUBS | dnsgen - | puredns resolve -q -r $RESOLVERS_PATH
}

# TODO:
# + find domains from archives with gau or xnlinkfinder
# + Find domains from vhost fuzzing